geom_point(mapping = aes(size = percent_of_tot_dup))  +
labs(x = "Surveyor Id", y = "% of total Duplicates",
title = "Percent (of total) duplicate Values in Surveyor Id") +
theme(legend.title = element_blank()) +
geom_text(mapping = aes(label = percent_of_tot_dup))
ggplot2::ggplot(data = dummy_data_duplicates, mapping = aes(x = reorder(surveyor_id, -percent_of_tot_dup), y = percent_of_tot_dup)) +
geom_point(mapping = aes(size = percent_of_tot_dup))  +
labs(x = "Surveyor Id", y = "% of total Duplicates",
title = "Percent (of total) duplicate Values in Surveyor Id") +
theme(legend.title = element_blank()) +
geom_text(mapping = aes(label = round(percent_of_tot_dup)))
ggplot2::ggplot(data = dummy_data_duplicates, mapping = aes(x = reorder(surveyor_id, -percent_of_tot_dup), y = percent_of_tot_dup)) +
geom_point(mapping = aes(size = percent_of_tot_dup))  +
labs(x = "Surveyor Id", y = "% of total Duplicates",
title = "Percent (of total) duplicate Values in Surveyor Id") +
theme(legend.title = element_blank()) +
geom_text(mapping = aes(label = round(percent_of_tot_dup)))
ggplot2::ggplot(data = dummy_data_duplicates, mapping = aes(x = reorder(surveyor_id, -percent_of_tot_dup), y = percent_of_tot_dup)) +
geom_point(mapping = aes(size = percent_of_tot_dup))  +
labs(x = "Surveyor Id", y = "% of total Duplicates",
title = "Percent (of total) duplicate Values in Surveyor Id") +
theme(legend.title = element_blank())
mtcars %>% filter("mpg" == 5)
mtcars %>% filter(mpg == 5)
mpg
mtcars
mtcars %>% filter(cyl == 5)
mtcars %>% filter(cyl == 3)
mtcars
mtcars %>% filter(cyl == 6)
mtcars %>% filter("cyl" == 6)
mtcars %>% filter(across("cyl") == 6)
mtcars %>% filter(across(colnames(mtcars)[2]) == 6)
count_duplicates(dummy_data, c("surveyor_id"))
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
count_duplicates(uniq_identifier_col) %>%
select(uniq_identifier_col)
df %>%
filter(across(uniq_identifier_col) %in%
uniq_identifier_col_df[, uniq_identifier_col])
}
}
display_duplicates(dummy_data, c("surveyor_id"))
mtcars[, "mpg"]
colnames(mtcars)[2]
across(colnames(mtcars)[2])
dummy_data %>%
count_duplicates(uniq_identifier_col = "surveyor_id") %>%
select(uniq_identifier_col)
dummy_data %>%
count_duplicates(uniq_identifier_col = "surveyor_id")
dummy_data %>%
count_duplicates(uniq_identifier_col = "surveyor_id") %>%
select("surveyor_id")
foo <- dummy_data %>%
count_duplicates(uniq_identifier_col = "surveyor_id") %>%
select("surveyor_id")
dummy_data %>%
filter(across("surveyor_id") %in%
foo[, "surveyor_id"])
dummy_data %>%
filter(across("surveyor_id")  == 108)
foo[, "surveyor_id"]
as.character(foo[, "surveyor_id"])
dummy_data %>%
filter(across("surveyor_id") %in%
as.charcter(foo[, "surveyor_id"]))
dummy_data %>%
filter(across("surveyor_id") %in%
as.character(foo[, "surveyor_id"]))
unlist(foo[, "surveyor_id"])
as.character(unlist(foo[, "surveyor_id"]))
dummy_data %>%
filter(across("surveyor_id") %in%
as.character(unlist(foo[, "surveyor_id"])))
as.numeric(unlist(foo[, "surveyor_id"]))
dummy_data %>%
filter(across("surveyor_id") %in%
as.numeric(unlist(foo[, "surveyor_id"])))
mtcars %>% filter(across("mpg") %in% c(6, 7, 8))
mtcars %>% filter(across("mpg") %in% c("6", "7", "8"))
mtcars %>% filter(mpg %in% c("6", "7", "8"))
mtcars %>% filter(mpg %in% c(6, 7, 8))
mtcars %>% filter(cyl %in% c(6, 7, 8))
mtcars %>% filter(cyl %in% c("6", "7", "8"))
mtcars %>% filter(across("cyl") %in% c("6", "7", "8"))
mtcars %>% filter(across("cyl") %in% c(6, 7, 8))
mtcars %>% filter(across("cyl") == 6)
mtcars %>% filter(across("mpg") %in% c(6, 7, 8))
?across
mtcars %>% filter(as.symbol("mpg") %in% c(6, 7, 8))
mtcars %>% filter(as.symbol("cyl") %in% c(6, 7, 8))
mtcars %>% filter("cyl" %in% c(6, 7, 8))
as.symbol("cyl")
mtcars %>% filter(!!as.symbol("cyl") %in% c(6, 7, 8))
mtcars %>% filter(!!as.symbol("cyl") %in% c(6,))
mtcars %>% filter(!!as.symbol("cyl") %in% c(6))
mtcars %>% filter(!!as.symbol("cyl") %in% c(6, 7, 7))
mtcars %>% filter(!!as.symbol("cyl") %in% c(6, 8))
mtcars %>% filter(!!as.symbol("cyl") %in% mtcars$cyl)
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
count_duplicates(uniq_identifier_col) %>%
select(uniq_identifier_col)
df %>%
filter(!!as.symbol(uniq_identifier_col) %in%
uniq_identifier_col_df[, uniq_identifier_col])
}
}
display_duplicates(dummy_data, c("surveyor_id"))
uniq_identifier_col_df <- dummy_data %>%
count_duplicates(uniq_identifier_col = c("surveyor_id")) %>%
select(uniq_identifier_col = c("surveyor_id"))
uniq_identifier_col_df
dummy_data %>%
filter(!!as.symbol(c("surveyor_id")) %in%
uniq_identifier_col_df[, c("surveyor_id")])
uniq_identifier_col_df
uniq_identifier_col_df <- dummy_data %>%
count_duplicates(uniq_identifier_col = c("surveyor_id"))
uniq_identifier_col_df
uniq_identifier_col_df <- dummy_data %>%
count_duplicates(uniq_identifier_col = c("surveyor_id")) %>%
select(c("surveyor_id"))
uniq_identifier_col_df
uniq_identifier_col_df <- dummy_data %>%
count_duplicates(uniq_identifier_col = c("surveyor_id"))
uniq_identifier_col_df
uniq_identifier_col_df <- dummy_data %>%
count_duplicates(uniq_identifier_col = c("surveyor_id")) %>%
select(c("surveyor_id"))
dummy_data %>%
filter(!!as.symbol(c("surveyor_id")) %in%
uniq_identifier_col_df[, c("surveyor_id")])
dummy_data %>%
filter(!!as.symbol("surveyor_id") %in%
uniq_identifier_col_df[, c("surveyor_id")])
uniq_identifier_col_df[, c("surveyor_id")]
!!as.symbol("surveyor_id") %in%
+                uniq_identifier_col_df[, c("surveyor_id")]
mtcars$mpg
uniq_identifier_col_df[, c("surveyor_id")]
unlist(uniq_identifier_col_df[, c("surveyor_id")])
dummy_data %>%
filter(!!as.symbol("surveyor_id") %in%
as.numeric(unlist(uniq_identifier_col_df[, c("surveyor_id")])))
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
count_duplicates(uniq_identifier_col) %>%
select(uniq_identifier_col)
foo <- df %>%
filter(!!as.symbol(uniq_identifier_col) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col])))
}
return(list(uniq_identifier_col_df, foo))
}
tmp <- display_duplicates(dummy_data, "surveyor_id")
tmp
tmp[[2]]$surveyor_id
unique(tmp[[2]]$surveyor_id)
tmp[[1]]
unique(tmp[[2]]$surveyor_id) %in% tmp[[1]]$surveyor_id
count(tmp[[1]], surveyor_id)
count(tmp[[2]], surveyor_id)
View(tmp2 <- dummy_data %>%
count_duplicates("surveyor_id"))
mtcars
mtcars %>%
count_duplicates("cyl") %>%
select("cyl")
foo <- mtcars %>%
count_duplicates(c("cyl", "mpg")) %>%
select("cyl")
foo
foo <- mtcars %>%
count_duplicates(c("cyl", "mpg")) %>%
select(c("cyl", "mpg"))
foo <- mtcars %>%
count_duplicates(c("cyl", "mpg")) %>%
select(c("cyl", "mpg"))
foo
foo1 <- mtcars %>%
select(c("mpg", "cyl")) %>%
filter(!!as.symbol(uniq_identifier_col) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col])))
}
foo1 <- mtcars %>%
select(c("mpg", "cyl")) %>%
filter(function(x) !!as.symbol(x) %in%
as.numeric(unlist(foo[, as.symbol(x)])))
}
foo1 <- mtcars %>%
select(c("mpg", "cyl")) %>%
map(filter(function(x) !!as.symbol(x) %in%
as.numeric(unlist(foo[, as.symbol(x)]))))
foo1 <- mtcars %>%
select(c("mpg", "cyl")) %>%
map(function(x) filter(!!as.symbol(x) %in%
as.numeric(unlist(foo[, as.symbol(x)]))))
foo
foo1 <- mtcars %>%
select(c("mpg", "cyl")) %>%
map(function(x) filter(!!as.symbol(x) %in%
as.numeric(unlist(foo[, !!as.symbol(x)]))))
foo1 <- mtcars %>%
select(c("mpg", "cyl")) %>%
map(function(x) filter(!!as.symbol(x) %in%
as.numeric(unlist(foo[, x]))))
foo1 <- mtcars %>%
select(c("mpg", "cyl")) %>%
map(function(x) filter(!!as.symbol(x) %in%
as.character(unlist(foo[, x]))))
View(foo)
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
count_duplicates(uniq_identifier_col) %>%
select(uniq_identifier_col)
for(i in 1:length(uniq_identifier_col)){
foo <- df %>%
filter(!!as.symbol(uniq_identifier_col[i]) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col[i]])))
}
}
return(list(uniq_identifier_col_df, foo))
}
df <- mtcars
display_duplicates(df, c("cyl", "mpg"))
display_duplicates(df, c("cyl", "mpg", "gear"))
count(mtcars, mpg, cyl,gear)
dd <- display_duplicates(df, c("cyl", "mpg", "gear"))
dd[[1]]
df %>%
count_duplicates(c("cyl", "mpg", "gear"))
View(df %>%
count_duplicates(c("cyl", "mpg", "gear")))
dd[[2]]
nrow(dd[[2]])
?roxygen2::tag_inherit
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
econR::count_duplicates(uniq_identifier_col) %>%
dplyr::select(uniq_identifier_col)
for(i in 1:length(uniq_identifier_col)){
df <- df %>%
dplyr::filter(!!as.symbol(uniq_identifier_col[i]) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col[i]])))
}
return(df %>%
dplyr::select(uniq_identifier_col, tidyselect::everything()))
} else {
stop("Either the object doesn't exist or it isn't a tibble/dataframe. Please make
sure that the object exists in the current environment and also make
sure that it is of class: 'data.frame'/'tbl'/'tbl_df'. To coerce an object to
to tibble you can use: 'as_tibble' function.")
}
}
display_duplicates(mtcars, cyl)
display_duplicates(mtcars, c("cyl"))
display_duplicates(mtcars, c("cyl", "mpg"))
display_duplicates(dummy_data, c("uuid"))
display_duplicates(dummy_data, c("starttime"))
display_duplicates(dummy_data, c("starttime"))
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
econR::count_duplicates(uniq_identifier_col) %>%
dplyr::select(uniq_identifier_col)
for(i in 1:length(uniq_identifier_col)){
df <- df %>%
dplyr::filter(!!as.symbol(uniq_identifier_col[i]) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col[i]])))
}
return(df %>%
dplyr::select(uniq_identifier_col, tidyselect::everything())) %>%
dplyr::arrange(uniq_identifier_col)
} else {
stop("Either the object doesn't exist or it isn't a tibble/dataframe. Please make
sure that the object exists in the current environment and also make
sure that it is of class: 'data.frame'/'tbl'/'tbl_df'. To coerce an object to
to tibble you can use: 'as_tibble' function.")
}
}
display_duplicates(dummy_data, c("starttime"))
mtcars
mtcars %>% arrange("cyl")
mtcars %>% arrange(cyl)
mtcars %>% arrange(cyl)
mtcars %>% arrange("cyl")
select(mtcars, "mpg")
mtcars %>% arrange({{mpg}})
mtcars %>% arrange(!!as.symbol(mpg))
mtcars %>% arrange(!!as.symbol("mpg"))
mtcars %>% arrange(!!as.symbol("cyl"))
mtcars %>% arrange(!!as.symbol(c("cyl", "mpg")))
mtcars %>% arrange(!!as.symbol(c("cyl")))
mtcars %>% arrange(!!as.symbol(c("cyl", "gear")))
mtcars %>% arrange(!!as.symbol(c("gear")))
mtcars %>% arrange(!!as.symbol(c("gear", "cyl")))
mtcars %>% arrange(!!!as.symbol(c("gear", "cyl")))
mtcars %>% arrange(across(c("gear", "cyl")))
mtcars %>% arrange(!!syms(c("gear", "cyl")))
mtcars %>% arrange(!!!syms(c("gear", "cyl")))
mtcars %>% arrange(!!enquos(c("gear", "cyl")))
mtcars %>% arrange(!!enquos(list("gear", "cyl")))
mtcars %>% arrange(!!enquos(c(gear, cyl)))
as.symbol("a")
as.symbol(c("a", "b"))
syms(c("a", "b"))
unlist(syms(c("a", "b")))
unlist(unlist(syms(c("a", "b"))))
mtcars %>% arrange(!!syms(c("gear", "cyl")))
as.character(syms(c("a", "b")))
syms(as.character(syms(c("a", "b"))))
expr(syms(c("a", "b")))
syms(c("a", "b"))
foo <- syms(c("a", "b"))
mtcars %>% arrange(foo[[1]], foo[[2]])
foo[[1]]
mtcars %>% arrange(!!foo[[1]], foo[[2]])
mtcars %>% arrange(!!foo[[1]], !!foo[[2]])
mtcars %>% arrange(c("cyl"))
count(mtcars)
count(mtcars, everything())
count(mtcars, mpg)
count(mtcars, colnames(mtcars))
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
econR::count_duplicates(uniq_identifier_col) %>%
dplyr::select(uniq_identifier_col)
for(i in 1:length(uniq_identifier_col)){
df <- df %>%
dplyr::filter(!!as.symbol(uniq_identifier_col[i]) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col[i]])))
}
return(df %>%
dplyr::select(uniq_identifier_col, tidyselect::everything()))
} else {
stop("Either the object doesn't exist or it isn't a tibble/dataframe. Please make
sure that the object exists in the current environment and also make
sure that it is of class: 'data.frame'/'tbl'/'tbl_df'. To coerce an object to
to tibble you can use: 'as_tibble' function.")
}
}
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
econR::count_duplicates(uniq_identifier_col) %>%
dplyr::select(uniq_identifier_col)
for(i in 1:length(uniq_identifier_col)){
df <- df %>%
dplyr::filter(!!as.symbol(uniq_identifier_col[i]) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col[i]])))
}
return(df %>%
dplyr::select(uniq_identifier_col, tidyselect::everything())) %>%
dplyr::arrange(!!as.symbol(uniq_identifier_col[1]))
} else {
stop("Either the object doesn't exist or it isn't a tibble/dataframe. Please make
sure that the object exists in the current environment and also make
sure that it is of class: 'data.frame'/'tbl'/'tbl_df'. To coerce an object to
to tibble you can use: 'as_tibble' function.")
}
}
display_duplicates(dummy_data, c("surveyor_id"))
mtcars %>% arrange(!!as.symbol(c("gear", "cyl")[1]))
mtcars %>% arrange(!!as.symbol(c("gear", "cyl")[2]))
mtcars %>% arrange(!!as.symbol(c("gear")[1]))
display_duplicates(dummy_data, c("surveyor_id"))
display_duplicates <- function(df, uniq_identifier_col){
if((envnames::get_obj_name(df) %in% ls()) &&
(tibble::is_tibble(df) || is.data.frame(df))){
uniq_identifier_col_df <- df %>%
econR::count_duplicates(uniq_identifier_col) %>%
dplyr::select(uniq_identifier_col)
for(i in 1:length(uniq_identifier_col)){
df <- df %>%
dplyr::filter(!!as.symbol(uniq_identifier_col[i]) %in%
as.numeric(unlist(uniq_identifier_col_df[, uniq_identifier_col[i]])))
}
return(df %>%
dplyr::select(uniq_identifier_col, tidyselect::everything()) %>%
dplyr::arrange(!!as.symbol(uniq_identifier_col[1])))
} else {
stop("Either the object doesn't exist or it isn't a tibble/dataframe. Please make
sure that the object exists in the current environment and also make
sure that it is of class: 'data.frame'/'tbl'/'tbl_df'. To coerce an object to
to tibble you can use: 'as_tibble' function.")
}
}
display_duplicates(dummy_data, c("surveyor_id"))
foo <- display_duplicates(dummy_data, c("surveyor_id"))
foo
foo <- foo %>%
filter(surveyor_id %in% c(101:105))
foo
foo
foo %>%
ggplot(mapping = aes(x = starttime, y = endtime)) +
geom_point()
foo %>%
ggplot(mapping = aes(x = starttime, y = endtime)) +
geom_point() +
facet_wrap(~surveyor_id)
foo %>%
ggplot(mapping = aes(x = starttime, y = endtime)) +
geom_point() +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = starttime, y = endtime)) +
geom_point() +
geom_line() +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = starttime, y = endtime)) +
geom_point() +
geom_path() +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = starttime, y = endtime)) +
geom_point() +
facet_wrap(~surveyor_id, scales = "free_y")
View(foo)
foo %>%
ggplot(mapping = aes(x = gender)) +
geom_hist() +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = gender)) +
geom_histogram() +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = gender)) +
geom_histogram(stat = "count") +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = age)) +
geom_histogram(stat = "count") +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = age)) +
geom_histogram(stat = "count") +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = age_c)) +
geom_histogram(stat = "count") +
facet_wrap(~surveyor_id, scales = "free_y")
foo %>%
ggplot(mapping = aes(x = age_c)) +
geom_histogram(stat = "count") +
facet_wrap(~surveyor_id)
foo %>%
ggplot(mapping = aes(x = age_c)) +
geom_histogram(stat = "count") +
facet_grid(gender~surveyor_id)
foo <- count_duplicates(dummy_data, c("surveyor_id"))
foo %>%
ggplot(mapping = aes(x = age_c)) +
geom_histogram(stat = "count") +
facet_grid(gender~surveyor_id)
foo <- count_duplicates(dummy_data, c("surveyor_id"))
foo
foo <- display_duplicates(dummy_data, c("surveyor_id"))
foo %>%
ggplot(mapping = aes(x = age_c)) +
geom_histogram(stat = "count") +
facet_grid(gender~surveyor_id)
foo %>%
filter(surveyor_id %in% c(101:105)) %>%
ggplot(mapping = aes(x = age_c)) +
geom_histogram(stat = "count") +
facet_grid(gender~surveyor_id)
list_common_columns <- function(df1, df2) {
if(((envnames::get_obj_name(df1) %in% ls()) &&
(tibble::is_tibble(df1) || is.data.frame(df1))) &&
((envnames::get_obj_name(df2) %in% ls()) &&
(tibble::is_tibble(df2) || is.data.frame(df2)))){
return(lubridate::intersect(colnames(df1), colnames(df2)))
} else {
stop("Either the objects (df1, df2, or both) doesn't exist or it isn't a tibble/dataframe. Please make
sure that the objects exist in the current environment and also make
sure that they are of class: 'data.frame'/'tbl'/'tbl_df'. To coerce an object to
to tibble you can use: 'as_tibble' function.")
}
}
cars
mtcars
dummy_data_1 <- dummy_data %>% select(1:5)
dummy_data_1
list_common_columns(dummy_data, dummy_data_1)
document()
devtools::document()
rm(list = c("count_duplicates", "count_missing_values", "display_duplicates", "list_common_columns"))
devtools::load_all()
rm(list = ls())
source("C:/Users/Hp/OneDrive/Desktop/econR/R/helper.R")
source("C:/Users/Hp/OneDrive/Desktop/econR/R/helper.R")
devtools::load_all()
